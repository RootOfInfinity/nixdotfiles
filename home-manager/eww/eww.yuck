; (defwindow notifications
;     :monitor 0
;     :geometry (geometry :x "20px"
;         :y "20px"
;         :anchor "top right")
;     :stacking "overlay"
;     (label :text "TESTUS"))

; (defwindow powermenu
;     :monitor 0 
;     :stacking "fg"
;     :windowtype "normal"
;     :wm-ignore true
;     :geometry (geometry
;         :width "50%"
;         :height "100%")
;     (powermenu_layout))

; (defwidget powermenu_layout []
;     (label :text "Hello, Powermenu!"))

(defpoll net :interval "50s"
    :initial `N/A`
    `nmcli -f DEVICE,TYPE,STATE device \
         | awk '{if($3=="connected" && $1!="lo")print$1" "$2}'`)

(defwidget netWidget []
    (label :text {net == "" ? '󱘖 Disconnected 󱘖' : ' ${net} '}
        :class "connect_text"))

(deflisten music :interval "5s"
    :initial ''
    `playerctl --follow metadata --format '{{ title }}' || true`)

(defpoll volume :interval "1s"
    :inital "N/A"
    `awk -F"'" '/Default/ {print $2}' <(pulsemixer --list-sinks)`)

(defpoll muted :interval "1s"
    :inital false
    `~/nix/home-manager/eww/scripts/getmuted.sh`) 

(defwidget musicWidget []
    (box :orientation "h"
        :halign "start"
        (label :text {music != '' ? " ${music} " : "󰝛 LOCKED IN 󰝛"} )
        (label :text
            {muted == "true" ? "${volume} "
                : "${volume} 󰕾"})))

(defwidget batteryWidget []
    (label :text "${EWW_BATTERY.capacity}%"))
; 
; {strlength(music) > 40 ? " Name too long bro " : " ${music} "}

(defvar ontime true)

(defwidget timeWidget []
    (button
        :onclick '~/nix/home-manager/eww/scripts/toggletimevar.sh'
        (label
            :text {ontime ?
                formattime(EWW_TIME, "%I:%M %p") :
                formattime(EWW_TIME, "%Y-%m-%d")})))



(deflisten workspaces "hyprland-workspaces _")

(defwidget workspaceWidget [monitor]
    (box :class "workspaces"
        (for i in {workspaces[monitor].workspaces}
            (button
                :onclick "hyprctl dispatch workspace ${i.id}"
                :class "${i.class}"
                "${i.name}"))))



(defwindow bar [monitor]
    :monitor monitor
    :geometry (geometry :x "0px"
        :y "0px"
        :width "100%"
        :anchor "top center")
    :stacking "bg"
    :focusable false
    :exclusive true

    (centerbox :orientation "horizontal"
        (box :orientation "h"
            :halign "start"
            :class "musicbox"
            (musicWidget :class "music"))    
        (workspaceWidget :monitor monitor
            :hexpand true
            :halign "center")
        (box :orientation "horizontal"
            :halign "end"
            :class "sidestuffs"
            "${round(EWW_CPU.avg, 1)}%  ${round(EWW_RAM.used_mem_perc, 1)}% "
            (netWidget)
            (batteryWidget)
            (box :orientation "h"
                :halign "end"
                (timeWidget)
                (systray :orientation "horizontal"
                    :space-evenly false
                    ; :icon-size 20
                    :prepend-new true
                    :hexpand true
                    )))))

